describe("Autocompleter", function() {
  before(function() {
    this.originalHTML = $("body").html();
  });
  
  after(function() {
    $("body").html(this.originalHTML);
  })
  
  it("starts out as an p.edit_in_place", function() {
    expect($("p.edit_in_place")).to(exist);
  });
  
  describe("when clicked", function() {
    before(function() {
      $("p.edit_in_place").fireEvent("click");
    });
    
    it("is hidden", function() {
      expect("p.edit_in_place").to_not(be_visible);
    });
    
    it("shows an input", function() {
      expect("body").to(have, "input:text");
    });
    
    it("shows a submit button", function() {
      expect("body").to(have, "input:submit.editor");
    });
    
    it("shows a cancel button", function() {
      expect("body").to(have, "input:button.cancel.editor")
    });
    
    describe("when escape is pressed", function() {
      before(function() {
        $("input:text").focus();
        $("input:text").fireEvent("keydown", {keyCode: 27});
      });
      
      it("hides the input", function() {
        expect("body").to_not(have, "input:text")
      });
      
      it("shows the original <p> again", function() {
        expect("p.edit_in_place").to(be_visible)
      });
    });
    
    describe("when the cancel button is pressed", function() {
      before(function() {
        $("input.editor.cancel").fireEvent("click");
      });
      
      it("hides the input", function() {
        expect("body").to_not(have, "input:text")
      });
      
      it("shows the original <p> again", function() {
        expect("p.edit_in_place").to(be_visible)
      });
    });
  
    describe("when the XHR is successful", function() {
      before(function() {
        Screw.XHR.returns("{\"success\": true, \"result\": \"saved text\"}", "application/json", 200);
      });

      describe("when enter is pressed", function() {
        before(function() {
          $("input.editor:text").fireEvent("keydown", {keyCode: 13});
        });
        
        it("hides the input", function() {
          expect("body").to_not(have, "input:text");
        });
      
        it("shows a <p> with the resulting text", function() {
          expect("p.edit_in_place").to(contain_text, "saved text");
        });
      
        it("calls the URL provided by metadata in the <p>", function() {
          expect(Screw.XHR.url).to(equal, "/text/update")
        });
      });
      
      describe("when the submit button is clicked", function() {
        before(function() {
          $("input.editor:submit").fireEvent("click");
        });
        
        it("hides the input", function() {
          expect("body").to_not(have, "input:text");
        });
      
        it("shows a <p> with the resulting text", function() {
          expect("p.edit_in_place").to(contain_text, "saved text");
        });
      
        it("calls the URL provided by metadata in the <p>", function() {
          expect(Screw.XHR.url).to(equal, "/text/update")
        });
      })
    });    
  });
})